/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.nsu.fit.chernikov.Task_1_2;

import org.junit.Test;
import static org.junit.Assert.*;

public class PathfinderTest {
  @Test
  public void exampleTest() {
    Pathfinder pathfinder = new Pathfinder(3);
    pathfinder.addEdge(0, 1, 1);
    pathfinder.addEdge(0, 2, 1);
    pathfinder.addEdge(1, 0, 4);
    pathfinder.addEdge(1, 2, 1);
    pathfinder.addEdge(2, 0, 2);
    pathfinder.addEdge(2, 1, 1);
    assertEquals(3, pathfinder.getDistance(1, 0).getWeight());
  }

  @Test
  public void emptyGraphTest() {
    int size = 10;
    Pathfinder pathfinder = new Pathfinder(size);
    for (int i = 0; i < size; i++) {
      for (int j = 0; j < size; j++) {
        Distance dist = pathfinder.getDistance(i, j);
        if (i == j) {
          assertEquals(0, dist.getWeight());
        } else {
          assertTrue(dist.isInf());
        }
      }
    }
  }

  @Test
  public void lineTest() {
    int size = 100;
    Pathfinder pathfinder = new Pathfinder(size);
    for (int i = 0; i < size - 1; i++) {
      pathfinder.addEdge(i, i + 1, 1);
    }
    Distance d = pathfinder.getDistance(0, size - 1);
    assertEquals(Integer.toString(size - 1), d.toString());
    // addEdge to change distance
    pathfinder.addEdge(0, size - 1, size - 2);
    d = pathfinder.getDistance(0, size - 2);
    assertEquals(Integer.toString(size - 2), d.toString());
  }

  @Test
  public void starTest() {
    int size = 100;
    Pathfinder pathfinder = new Pathfinder(size);
    for (int i = 1; i < size; i++) {
      pathfinder.addEdge(0, i, 1337);
    }
    for (int i = 1; i < size; i++) {
      Distance d = pathfinder.getDistance(i, i);
      assertEquals("0", d.toString());
      d = pathfinder.getDistance(0, i);
      assertEquals("1337", d.toString());
    }
    for (int i = 1; i < size; i++) {
      Distance d = pathfinder.getDistance(i, 0);
      assertEquals("inf", d.toString());
    }
  }
}
