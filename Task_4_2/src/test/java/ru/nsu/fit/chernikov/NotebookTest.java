/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.nsu.fit.chernikov;

import org.junit.Test;

import java.io.File;
import java.io.IOException;

import static org.junit.Assert.*;

public class NotebookTest {
  @Test
  public void testAddNote() {
    Notebook nb = new Notebook();
    assertTrue(nb.addNote("Title", "Text"));
    assertFalse(nb.addNote("Title", "Another text"));
    assertEquals(1, nb.stream().count());
    assertEquals("Text", nb.getRecords().get(0).getBody());
  }

  @Test
  public void testRemove() {
    Notebook nb = new Notebook();
    assertTrue(nb.addNote("Title1", "Text"));
    assertTrue(nb.addNote("Title2", "Another text"));
    assertTrue(nb.addNote("Title3", "And another one"));
    assertEquals(3, nb.stream().count());
    nb.removeNote("Title2");
    assertEquals(2, nb.stream().count());
  }

  @Test
  public void testJSON() {
    Notebook nb = new Notebook("src/test/resources/storage.json");
    assertEquals(5, nb.stream().count());

    assertTrue(
        nb.stream().map(Record::getTitle).anyMatch(s -> s.equals("Wow that title is great")));
    assertTrue(nb.stream().map(Record::getTitle).anyMatch(s -> s.equals("Back to the future")));
    assertTrue(nb.stream().map(Record::getTitle).anyMatch(s -> s.equals("Here we are")));
    assertTrue(nb.stream().map(Record::getTitle).anyMatch(s -> s.equals("hello")));
  }

  @Test
  public void testStorage() {
    File file = new File("src/test/resources/storageTmp.json");
    file.delete();
    Notebook nb = new Notebook("src/test/resources/storageTmp.json");
    assertTrue(nb.addNote("Title1", "Text"));
    assertTrue(nb.addNote("Title2", "Another text"));
    assertTrue(nb.addNote("Title3", "And another one"));
    try {
      nb.saveNotebook();
    } catch (IOException e) {
      System.err.println(e.toString());
      fail();
    }
    Notebook nbNew = new Notebook("src/test/resources/storageTmp.json");
    assertEquals(3, nbNew.stream().count());
    assertTrue(nbNew.stream().map(Record::getTitle).anyMatch(s -> s.equals("Title1")));
    assertTrue(nbNew.stream().map(Record::getTitle).anyMatch(s -> s.equals("Title2")));
    assertTrue(nbNew.stream().map(Record::getTitle).anyMatch(s -> s.equals("Title3")));
    file.delete();
  }
}
